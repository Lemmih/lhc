Fold.foldr : ∀ a b. (a →  b →  b) →  b →  [a] →  b
Fold.foldr =
  λ @.a^1:* @.b^2:* Fold.fn^3:(a →  b →  b) Fold.acc^4:b arg^5:[a] → 
  case arg^5 of
    scrut^6:[a]
    LHC.Prim.Nil  → 
      Fold.acc^4
    LHC.Prim.Cons Fold.x^7:a Fold.xs^8:[a] → 
      Fold.fn^3 Fold.x^7 (Fold.foldr
                  @.a^1 @.b^2 Fold.fn^3 Fold.acc^4
          Fold.xs^8)
Fold.foldl : ∀ a b. (b →  a →  b) →  b →  [a] →  b
Fold.foldl =
  λ @.a^9:* @.b^10:* Fold.fn^11:(b →  a →  b) Fold.acc^12:b arg^13:[a] → 
  case arg^13 of
    scrut^14:[a]
    LHC.Prim.Nil  → 
      Fold.acc^12
    LHC.Prim.Cons Fold.x^15:a Fold.xs^16:[a] → 
      Fold.foldl @.a^9 @.b^10
            Fold.fn^11 (Fold.fn^11
              Fold.acc^12 Fold.x^15)
        Fold.xs^16
